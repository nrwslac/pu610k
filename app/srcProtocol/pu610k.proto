InTerminator  = CR LF;
OutTerminator = CR LF;
ReplyTimeout  =  800;
ReadTimeout   =  100;
WriteTimeout  =  100;
ExtraInput    = Ignore;

# Password PW,LASER, in PW
# Verbose: VB,0, in VB,0
Initialization   { out ":PW,LASER\r\n:VB,0"; in "%*s"; in "%*s"; }

ModeSet          { out ":MD,%d"; in ":MD,%*d%*s"; }   # 0, 1, 2, 4.  If 4, we actually have MD,4,04??.0
ModeGet          { out ":MD"; in ":MD,%d"; }

# These are set the same!!
ChargeDeferSet   { out ":CD,%d"; in ":CD,%*d"; }   # 1-32767 sec           
ChargeDeferGet   { out ":CD"; in ":CD,%d,%*d"; }   # sec, remain sec
ChargeInhibitSet { out ":CI,%d"; in ":CI,%*d; }    # 1-32767 sec: return seconds, remaining seconds.
ChargeInhibitGet { out ":CI"; in ":CI,%d,%*d"; }   # seconds, remaining seconds  (Read during MD,2)
CICountdownGet   { in ":CI,%*d,%d"; }

ChargeSet        { out ":CH,1";  in ":CH,%*d"; }   # Or CH,! if the command is rejected.
ChargeGet        { out ":CH";  in ":CH,EOC%d"; }

HighVoltageGet   { out ":HV"; in ":HV,%d"; }       # measured volts (during MD,2)

ErrorGet         { out ":ER"; in ":ER,%2s,%4*x"; } # OK or error number.
FlashModeSet     { out ":PF,%d"; in ":PF,%*d"; }   # 3=Auto, 7=Manual. Requires reboot after setting
FlashModeGet     { in ":PF,%d"; }                  # 3=Auto, 7=Manual.
Reboot		 { out ":RB"; }                    # Must be in MD 0

VoltageSet       { out ":VS,%d"; in ":VS,%*d"; }
VoltageGet       { out ":VS"; in ":VS,%d"; }

WatchdogSet      { out ":WD,%d"; in ":WD,%*d"; }
WatchdogGet      { out ":WD"; in ":WD,%*d"; }

# state (see appendix 1), shutter state, interlocks, flashcnt, Qshot cnt
ListAllGet       { out ":LE"; in ":LE,%x,%*d,%*x,%*x,%*x"; }
ShotCntGet       { in ":LE,%*x,%*d,%*x,%x,%*x"; }
